"""
Django settings for DjangoProject project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# ЗДЕСЬ ДОЛЖЕН БЫТЬ ВАШ СЕКРЕТНЫЙ КЛЮЧ! ВОЗЬМИТЕ ЕГО ИЗ СВОЕГО ТЕКУЩЕГО settings.py (не используйте этот, если он не ваш)
SECRET_KEY = 'django-insecure-o#k^2-f)4%9p8s-74x1j^f)a6e#2_02l9x*^k!i9w#9^6f@h&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False # <--- ОЧЕНЬ ВАЖНО: ДЛЯ ПРОДАКШЕНА ВСЕГДА False

ALLOWED_HOSTS = ['ZicE.pythonanywhere.com', 'zicevisit.com'] # <--- ВАШ ДОМЕН НА PYTHONANYWHERE
                                            # Если потом будет свой домен, добавьте его сюда:
                                            # ['ZicE.pythonanywhere.com', 'moy-domen.com', 'www.moy-domen.com']


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core', # <--- Убедитесь, что ваше приложение 'core' здесь
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'DjangoProject.urls' # <--- УБЕДИТЕСЬ, ЧТО ЭТО ИМЯ ВАШЕЙ ПАПКИ DJANGO-ПРОЕКТА (ГДЕ urls.py)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [], # <--- ИСПРАВЛЕНО: ПУСТОЙ СПИСОК. 'APP_DIRS' будет искать шаблоны.
        'APP_DIRS': True, # <--- ЭТО ОЧЕНЬ ВАЖНО: Django будет искать шаблоны в 'templates/' внутри каждого приложения.
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoProject.wsgi.application' # <--- УБЕДИТЕСЬ, ЧТО ЭТО ИМЯ ВАШЕЙ ПАПКИ DJANGO-ПРОЕКТА (ГДЕ wsgi.py)


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'ru-ru' # <--- Установим русский язык

TIME_ZONE = 'Europe/Oslo' # <--- Установим ваш часовой пояс (например, для Норвегии это 'Europe/Oslo')

USE_I10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static_collected') # <--- КУДА СОБИРАТЬ СТАТИКУ

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media_files') # <--- КУДА СОБИРАТЬ МЕДИА-ФАЙЛЫ (картинки из БД)

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Profile data (пример данных, которые могут быть в вашем settings.py или в отдельном файле)
# Если эти данные у вас в базе данных или другом месте, удалите этот блок
PROFILE_DATA = {
    'name': 'ZicE', # <--- ВАШЕ ИМЯ
    'title': 'Frontend/Backend Разработчик', # <--- ВАША СПЕЦИАЛЬНОСТЬ
    'description': 'Я увлеченный разработчик, который создает функциональные и красивые веб-приложения, уделяя внимание деталям и пользовательскому опыту.',
    'email': 'romaswat666@gmail.com', # <--- ВАШ ЕМЕЙЛ
    'phone': '+7(963)860-46-25', # <--- ВАШ ТЕЛЕФОН
    'github_link': 'https://github.com/ZicESSS', # <--- ВАШ ГИТХАБ
    'profile_image': '/static/images/profile.jpg', # ИЛИ УКАЖИТЕ ПУТЬ К ВАШЕМУ ИЗОБРАЖЕНИЮ, если оно статичное
}
# Django Jazzmin Settings (добавьте в конец settings.py)
JAZZMIN_SETTINGS = {
    # title of the window (Will default to current_admin_site.site_title if absent or None)
    "site_title": "Админ-панель ZicE",

    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_header": "ZicE Portfolio",

    # square logo to use for your site, must be a static file
    "site_logo": "admin/img/logo.png", # Пример: можете создать эту папку и поместить туда PNG-логотип

    # Welcome text
    "welcome_sign": "Добро пожаловать в админ-панель ZicE!",

    # Copyright on the footer
    "copyright": "ZicE Inc.",

    # The model admin to search from the search bar, search bar will not be displayed if not set
    # "search_model": "auth.User", # Пример: разрешить поиск по модели User

    # Field name on user model that contains name for display
    "user_avatar": None, # "admin/img/user.png", # Если у вас есть аватар пользователя

    ############
    # Top Menu #
    ############

    # Links to put along the top menu
    "topmenu_links": [
        {"name": "Главная",  "url": "admin:index", "permissions": ["auth.view_user"]},
        {"name": "Сайт", "url": "/", "new_window": True}, # Ссылка на ваш публичный сайт
        # {"model": "auth.User"}, # Ссылка на список пользователей
        {"app": "core"}, # Ссылка на ваше приложение core
    ],

    #############
    # User Menu #
    #############

    # Additional links to include in the user menu on the top right ("Settings" "Sign out" etc)
    "usermenu_links": [
        {"name": "Профиль", "url": "/admin/auth/user/", "icon": "fas fa-user-circle"}, # Пример
    ],

    #############
    # Side Menu #
    #############

    # Whether to display the inbuild filters on the sidebar
    "show_sidebar": True,

    # Whether to aut expand the menu
    "navigation_expanded": True,

    # Hide these models from the sidebar
    "hide_models": ["auth.Group"], # Пример: скрыть группы пользователей

    # List of apps (and/or models) to display in the sidebar "accordions"
    # "apps": ["core", "auth"], # Если хотите явно указать порядок и какие приложения показывать

    #############
    # UI Tweaks #
    #############
    "show_ui_tuning": True, # Разрешить пользователям настраивать тему из админки
    "changeui_url": "jazzmin:change_ui",

    # Theme to use (must be present in jazzmin/static/jazzmin/src/scss/themes)
    # (feel free to provide a path to a custom theme file)
    "theme": "darkly", # Попробуйте "darkly", "flatly", "cosmo", "materia", "solar", "cyborg", "superhero" и т.д.
                       # Полный список тем: https://django-jazzmin.readthedocs.io/pages/configuration/themes.html

    "dark_mode_theme": "darkly", # Если используете переключатель тем

    # Color of the sidebar brand and menu text
    "sidebar_brand_color": "navbar-dark", # или "navbar-white"
    "sidebar_nav_color": "sidebar-dark-primary", # или "sidebar-dark-info", "sidebar-dark-danger" и т.д.

    # put the UI tuning toggle in the navbar or not (default True)
    "navbar_fixed": True, # Фиксированная верхняя панель
    "sidebar_fixed": True, # Фиксированный сайдбар
    "sidebar_nav_child_indent": True, # Отступ для вложенных пунктов меню
    "sidebar_nav_compact_style": False, # Более компактный стиль навигации

    # Custom Favicon (path to a static file)
    "site_icon": "admin/img/favicon.ico", # Пример: favicon
}

# Если вы хотите разрешить пользователям менять тему, добавьте это:
JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": False,
    "accent": "accent-primary",
    "navbar": "navbar-dark",
    "no_navbar_border": False,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": False,
    "sidebar": "sidebar-dark-primary",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "darkly",
    "dark_mode_theme": "darkly",
    "button_classes": {
        "primary": "btn-outline-primary",
        "secondary": "btn-outline-secondary",
        "info": "btn-outline-info",
        "warning": "btn-outline-warning",
        "danger": "btn-outline-danger",
        "success": "btn-outline-success"
    },
    "actions_button_classes": {
        "overwrite": True,
        "view": "btn-primary",
        "add": "btn-success",
        "change": "btn-info",
        "delete": "btn-danger"
    }
}